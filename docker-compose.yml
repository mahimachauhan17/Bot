version: '3.8'

services:
  # MongoDB
  mongodb:
    image: mongo:6.0
    container_name: interviewer_ai_mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_DATABASE: interviewer_ai_db

  # Redis
  redis:
    image: redis:7-alpine
    container_name: interviewer_ai_redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Django Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: interviewer_ai_backend
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - media_files:/app/media
    environment:
      - DEBUG=False
      - MONGODB_URI=mongodb://mongodb:27017/
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - mongodb
      - redis
    command: >
      sh -c "python manage.py migrate &&
             daphne -b 0.0.0.0 -p 8000 config.asgi:application"

  # Celery Worker
  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: interviewer_ai_celery
    restart: always
    volumes:
      - ./backend:/app
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - mongodb
      - redis
    command: celery -A config worker -l info

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: interviewer_ai_frontend
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8000/api
      - NEXT_PUBLIC_WS_URL=ws://backend:8000/ws
    depends_on:
      - backend
    command: npm run start

volumes:
  mongodb_data:
  redis_data:
  media_files:
